Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/jammy64"
  config.vm.box_check_update = false

  # Common provisioning script
  $script = <<-SCRIPT
    apt-get update
    apt-get install -y apt-transport-https ca-certificates curl software-properties-common
    snap install microk8s --classic
    snap install microk8s --classic
    usermod -a -G microk8s vagrant
    mkdir -p /home/vagrant/.kube
    chown -R vagrant:vagrant /home/vagrant/.kube
  SCRIPT

  # Control plane node
  config.vm.define "k8s-control" do |control|
    control.vm.hostname = "k8s-control"
    control.vm.network "private_network", ip: "192.168.56.10"
    control.vm.provider "virtualbox" do |vb|
      vb.memory = 4096
      vb.cpus = 2
    end
    control.vm.provision "shell", inline: $script
    control.vm.provision "shell", inline: <<-SHELL
      microk8s status --wait-ready
      microk8s enable dns
      microk8s enable helm3
      microk8s enable istio
      microk8s enable metrics-server
      microk8s add-node | grep "join" > /vagrant/join.txt
      
      # Allow external access to the cluster
      echo "allow-dashboard-socket: true" | sudo tee -a /var/snap/microk8s/current/config
      sudo sed -i 's/127.0.0.1/0.0.0.0/g' /var/snap/microk8s/current/args/kube-apiserver
      sudo microk8s stop
      sudo microk8s start
        
      # Wait for the cluster to be ready
      microk8s status --wait-ready
    SHELL
  end

  # Worker nodes
  (1..2).each do |i|
    config.vm.define "k8s-worker-#{i}" do |worker|
      worker.vm.hostname = "k8s-worker-#{i}"
      worker.vm.network "private_network", ip: "192.168.56.#{i + 10}"
      worker.vm.provider "virtualbox" do |vb|
        vb.memory = 2048
        vb.cpus = 2
      end
      worker.vm.provision "shell", inline: $script
    end
  end
end